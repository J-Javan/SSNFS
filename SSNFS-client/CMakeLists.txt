cmake_minimum_required(VERSION 3.8)
project(SSNFS_client)
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -D_FILE_OFFSET_BITS=64")
set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -Wall --pedantic -g")
set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/CMake" ${CMAKE_MODULE_PATH})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

#set( CMAKE_VERBOSE_MAKEFILE on )

set(CMAKE_CXX_STANDARD 11)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")

# http://www.cmake.org/Wiki/CMake_RPATH_handling#Mac_OS_X_and_the_RPATH
if (APPLE)
	set(CMAKE_MACOSX_RPATH ON)
	set(CMAKE_SKIP_BUILD_RPATH FALSE)
	set(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)
	set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/${LIB_INSTALL_DIR}")
	set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
	list(FIND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES "${CMAKE_INSTALL_PREFIX}/${LIB_INSTALL_DIR}" isSystemDir)
	if("${isSystemDir}" STREQUAL "-1")
		set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/${LIB_INSTALL_DIR}")
	endif()
endif()

if (WIN32 OR APPLE)
	set(DEFAULT_CASE_INSENSITIVE TRUE)
else()
	set(DEFAULT_CASE_INSENSITIVE FALSE)
endif()

# Check for FUSE.
#find_package (Fuse REQUIRED)
#include_directories (SYSTEM ${FUSE_INCLUDE_DIR})

set(SOURCE_FILES main.cpp common.cpp)
add_executable(SSNFS_client ${SOURCE_FILES})


INCLUDE(FindPkgConfig)

PKG_SEARCH_MODULE(FUSE REQUIRED fuse3)
INCLUDE_DIRECTORIES(${FUSE_INCLUDE_DIRS})
TARGET_LINK_LIBRARIES(SSNFS_client ${FUSE_LIBRARIES})
add_definitions (-D_FILE_OFFSET_BITS=64 -DFUSE_USE_VERSION=30)

# Check for OpenSSL.
find_package (OpenSSL REQUIRED)
include_directories (SYSTEM ${OPENSSL_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(SSNFS_client ${OPENSSL_LIBRARIES})

add_definitions(-D_CLIENT_VERSION=0.2)
